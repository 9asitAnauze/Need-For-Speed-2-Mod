name: Run tests

on: [pull_request, push]

jobs:
  test:

    strategy:
      fail-fast: false
      matrix:
        name-prefix: ['']
        os: [ubuntu-latest]
        python: [3.7, 3.8, 3.9, '3.10', 3.11, pypy-3.9, pyodide]
        include:
          # To keep the overall number of runs low, we test Windows
          # only on the latest CPython.
          - name-prefix: 'win-'
            os: windows-latest
            python: 3.11

    name: ${{ format('{0}{1}', matrix.name-prefix, matrix.python) }}
    runs-on: ${{ matrix.os }}
    env:
      TERM: xterm-256color
        # This is needed to avoid a terminfo-related crash when
        # testing PyPy.
      PYTHONPATH: .

    steps:
    - run: git config --global core.autocrlf false
    - uses: actions/checkout@v3
    - if: ${{ matrix.python != 'pyodide' }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - if: ${{ matrix.python == 'pyodide' }}
      uses: actions/setup-node@v3
    - name: Install
      shell: bash
      run: |
        if [[ ${{ matrix.python }} = pyodide ]] ; then
            npm install pyodide
            pip install 'pip >= 22.3.1'
              # Older pips may fail to install `pyodide-build`.
            pip install pyodide-build
            pyodide venv .venv-pyodide
            source .venv-pyodide/bin/activate
        fi
        pip install .
        rm -r hy
          # We want to be sure we're testing the installed version,
          # instead of running from the source tree.
        pip install pytest
    - name: Test
      shell: bash
      run: |
        if [[ ${{ matrix.python }} = pyodide ]] ; then
            source .venv-pyodide/bin/activate
        fi
        python -m pytest tests
